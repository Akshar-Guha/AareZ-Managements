{
  "meta": {
    "project": "Manager App",
    "date": "2025-09-05",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Manager App is a full-stack management dashboard application designed for efficient handling of investments, analytics, inventory, and user management. It integrates strong user authentication, role-based access control, and provides rich data visualization and filtering capabilities.",
  "core_goals": [
    "Provide secure user authentication with robust password policies.",
    "Enable efficient management of investments including creation, editing, and secure deletion.",
    "Deliver comprehensive analytics dashboards with interactive charts and filtering options.",
    "Implement role-based access control to secure sensitive operations.",
    "Offer clear and consistent API documentation and error handling for maintainability.",
    "Provide a responsive and user-friendly interface using modern frontend technologies."
  ],
  "key_features": [
    "User Authentication with context management and guarded routes for access control.",
    "Password policies enforcement during user registration using Zod validation.",
    "Role-Based Access Control middleware to restrict actions like investment deletion to admin users only.",
    "Reusable UI components including InvestmentCard, ConfirmationModal, StatsCard, FilterPanel, and ChartWrapper for consistent and modular frontend development.",
    "Error Handling Middleware to capture and standardize backend API error responses.",
    "API Documentation using Swagger UI for interactive and up-to-date endpoint information.",
    "Dashboard and Analytics pages featuring dynamic charts with Chart.js and filtering capabilities.",
    "Inventory and Products management pages to oversee stock and product details.",
    "Optical Character Recognition (OCR) functionality integrated within the app.",
    "Logging context and dashboard to track application operations and issues."
  ],
  "user_flow_summary": [
    "Users register by providing name, email, and a strong password that meets enforced policies.",
    "Registered users log in to access the dashboard and other protected pages.",
    "Authenticated users can navigate through investments, analytics, inventory, products, and OCR features via the navigation layout.",
    "Admins have elevated privileges to perform sensitive operations such as deleting investments, enforced via RBAC middleware.",
    "Users view investment details, create new investments, edit existing ones, and confirm deletion through modal dialogs.",
    "Analytics dashboard users apply filters such as date ranges, doctors, months, and years to visualize relevant statistics and charts.",
    "API consumers interact with documented backend endpoints using the Swagger UI for testing and integration purposes.",
    "Errors encountered in API requests are caught by middleware and returned in a standardized format to clients."
  ],
  "validation_criteria": [
    "User registration input is validated against defined schema ensuring password strength and email format.",
    "Authentication flow restricts access to private routes for unauthenticated users.",
    "Role-Based Access Control correctly restricts investment deletion to admin users and rejects unauthorized attempts.",
    "UI components render properly and are reusable across different pages without visual or functional defects.",
    "Error Handling Middleware consistently logs and formats error responses from the backend API.",
    "Swagger API documentation is complete, accurate, and allows interactive exploration of endpoints.",
    "Filters on analytics pages correctly update the data displayed on charts and stats cards.",
    "Investment CRUD operations reflect appropriately in the UI and backend database with consistency and security."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Express.js",
      "PostgreSQL",
      "Tailwind CSS",
      "Vite",
      "Zod",
      "Swagger",
      "Chart.js",
      "bcryptjs",
      "jsonwebtoken"
    ],
    "features": [
      {
        "name": "Error Handling Middleware",
        "description": "Catches and logs errors consistently, sending a standardized error response from the backend API.",
        "files": [
          "api/app.ts"
        ]
      },
      {
        "name": "Input Validation (Auth Registration)",
        "description": "Validates user registration input (name, email, password) using Zod, enforcing password policies on the backend.",
        "files": [
          "api/app.ts"
        ]
      },
      {
        "name": "Password Policies",
        "description": "Enforces strong password requirements (min length, uppercase, lowercase, number, special character) for user registration.",
        "files": [
          "api/app.ts"
        ]
      },
      {
        "name": "API Documentation (Swagger)",
        "description": "Provides interactive API documentation for backend endpoints using Swagger UI and JSDoc annotations.",
        "files": [
          "api/app.ts"
        ]
      },
      {
        "name": "InvestmentCard Component",
        "description": "A reusable React component to display individual investment details and actions (view, edit, delete).",
        "files": [
          "src/components/InvestmentCard.tsx",
          "src/pages/Investments.tsx"
        ]
      },
      {
        "name": "ConfirmationModal Component",
        "description": "A reusable React component for confirming user actions, specifically implemented for investment deletion.",
        "files": [
          "src/components/ConfirmationModal.tsx",
          "src/pages/Investments.tsx"
        ]
      },
      {
        "name": "StatsCard Component",
        "description": "A reusable React component to display key statistics in a card format within the analytics dashboard.",
        "files": [
          "src/components/StatsCard.tsx",
          "src/pages/Analytics.tsx"
        ]
      },
      {
        "name": "FilterPanel Component",
        "description": "A reusable React component for filtering data based on various criteria (date ranges, doctors, months, years).",
        "files": [
          "src/components/FilterPanel.tsx",
          "src/pages/Analytics.tsx"
        ]
      },
      {
        "name": "ChartWrapper Component",
        "description": "A reusable React component to encapsulate Chart.js initialization and rendering logic, used for various charts.",
        "files": [
          "src/components/ChartWrapper.tsx",
          "src/pages/Analytics.tsx"
        ]
      },
      {
        "name": "Role-Based Access Control (RBAC)",
        "description": "Middleware to restrict access to certain backend API endpoints based on authenticated user roles (e.g., only 'admin' can delete investments).",
        "files": [
          "api/app.ts"
        ]
      }
    ]
  }
}
